spring:
  application:
    name: security2
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/finstuff
          jwk-set-uri: http://localhost:8080/realms/finstuff/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            client-id: ${CLIENT_ID:finstuff-client}
            client-secret: ${CLIENT_SECRET:XczD2Tr18efVSYXYklOvp5tjncpka13x}
            authorization-grant-type: authorization_code
            scope: openid,profile,email
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/finstuff
            user-name-attribute: preferred_username
  datasource:
    url: jdbc:postgresql://localhost:5432/nikitas_db
    username: postgres
    password: postgres
  rabbitmq:
    host: localhost
    port: 5672
    username: finstuff
    password: finstuff

server:
  port: 8081

rabbitmq:
  queue:
    sec-rep: security-repository-queue
    rep-sec: repository-security-queue
  exchange: finstuff_exchange
  routing-key:
    account:
      new: new-account
      title-upd: update-account-title
      del: delete-account
      response:
        new: response-new-account
        title-upd: response-update-account-title
        del: response-delete-account
    transaction:
      new: new-transaction
      title-upd: update-transaction-title
      amount-upd: update-transaction-amount
      del: delete-transaction

# Дополнительные настройки Keycloak (если нужен доступ к Admin API)
#keycloak:
#  auth-server-url: http://localhost:8080
#  realm: finstuff
#jwkSetUri: http://localhost:8080/realms/finstuff/protocol/openid-connect/certs